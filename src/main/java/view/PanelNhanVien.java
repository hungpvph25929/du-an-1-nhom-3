/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import domainmodel.NhanVien;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import service.impl.NhanVienServiceImpl;

/**
 *
 * @author Quang Huy
 */
public class PanelNhanVien extends javax.swing.JPanel implements Runnable, ThreadFactory {

    private DefaultTableModel dtm = new DefaultTableModel();
    private List<NhanVien> list = new ArrayList<>();
    private List<NhanVien> listSearch = new ArrayList<>();
    private NhanVienServiceImpl nhanVienServiceImpl = new NhanVienServiceImpl();
    private Webcam webcam = null;
//    private WebcamPanel panel = null;
//    private Executor executor = Executors.newSingleThreadExecutor(this);

    /**
     * Creates new form PanelNhanVien
     */
    public PanelNhanVien() {
        initComponents();
        pnQLNV.setBackground(Color.white);
        pnThongTinNV.setBackground(Color.white);
        pnDanhSachNV.setBackground(Color.white);
        tbNhanVien.setBackground(Color.white);
        String[] header = {"Mã NV", "Tên NV", "Giới tính", "Ngày sinh", "Địa chỉ", "SĐT", "Email", "Trạng thái", "Chức vụ"};
        tbNhanVien.setModel(dtm);
        dtm.setColumnIdentifiers(header);
        list = nhanVienServiceImpl.getAll();
        showData(list);
        initWebcam();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        pnQLNV = new javax.swing.JPanel();
        pnThongTinNV = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        radioNam = new javax.swing.JRadioButton();
        radioNu = new javax.swing.JRadioButton();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        txtSdt = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        radioQuanLy = new javax.swing.JRadioButton();
        radioNhanVien = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        radioDaNghi = new javax.swing.JRadioButton();
        jLabel55 = new javax.swing.JLabel();
        radioDangLamViec = new javax.swing.JRadioButton();
        btnNew = new javax.swing.JButton();
        txtNgaySinh = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        panelWebcam = new javax.swing.JPanel();
        qrCode = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pnDanhSachNV = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbNhanVien = new javax.swing.JTable();
        jLabel54 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1300, 850));

        pnQLNV.setPreferredSize(new java.awt.Dimension(1300, 850));

        pnThongTinNV.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin Nhân Viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        jLabel47.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel47.setText("Họ tên");

        jLabel48.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel48.setText("Giới tính");

        buttonGroup1.add(radioNam);
        radioNam.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioNam.setSelected(true);
        radioNam.setText("Nam");

        buttonGroup1.add(radioNu);
        radioNu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioNu.setText("Nữ");

        jLabel49.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel49.setText("Ngày sinh");

        jLabel50.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel50.setText("Số điện thoại");

        jLabel51.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel51.setText("Địa Chỉ");

        jLabel52.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel52.setText("Email");

        jLabel53.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel53.setText("Chức vụ");

        txtTen.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtTen.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(40, 184, 213)));

        txtSdt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSdt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(40, 184, 213)));

        txtDiaChi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDiaChi.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(40, 184, 213)));

        txtEmail.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtEmail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(40, 184, 213)));

        buttonGroup2.add(radioQuanLy);
        radioQuanLy.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioQuanLy.setText("Quản lý");

        buttonGroup2.add(radioNhanVien);
        radioNhanVien.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioNhanVien.setSelected(true);
        radioNhanVien.setText("Nhân Viên");

        btnThem.setBackground(new java.awt.Color(41, 183, 212));
        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new ImageIcon("src/main/img/addNV.png"));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(41, 183, 212));
        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setIcon(new ImageIcon("src/main/img/updateNV.png"));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        buttonGroup3.add(radioDaNghi);
        radioDaNghi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioDaNghi.setText("Đã nghỉ việc");

        jLabel55.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel55.setText("Trạng thái");

        buttonGroup3.add(radioDangLamViec);
        radioDangLamViec.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioDangLamViec.setSelected(true);
        radioDangLamViec.setText("Đang làm việc");

        btnNew.setBackground(new java.awt.Color(41, 183, 212));
        btnNew.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnNew.setForeground(new java.awt.Color(255, 255, 255));
        btnNew.setIcon(new ImageIcon("src/main/img/newNV.png"));
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        txtNgaySinh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtNgaySinh.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(40, 184, 213)));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        panelWebcam.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(panelWebcam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panelWebcam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 31, Short.MAX_VALUE))
        );

        qrCode.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        qrCode.setIcon(new ImageIcon("src/main/img/scan.png"));
        qrCode.setText("QR Code scan");

        btnClose.setBackground(new java.awt.Color(41, 183, 212));
        btnClose.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnClose.setForeground(new java.awt.Color(255, 255, 255));
        btnClose.setIcon(new ImageIcon("src/main/img/close.png"));
        btnClose.setText("Stop scan");
        btnClose.setMaximumSize(new java.awt.Dimension(143, 29));
        btnClose.setPreferredSize(new java.awt.Dimension(150, 40));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel1.setText("         (Đóng webcam trước khi chuyển tab)");

        javax.swing.GroupLayout pnThongTinNVLayout = new javax.swing.GroupLayout(pnThongTinNV);
        pnThongTinNV.setLayout(pnThongTinNVLayout);
        pnThongTinNVLayout.setHorizontalGroup(
            pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongTinNVLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnThongTinNVLayout.createSequentialGroup()
                        .addComponent(jLabel50)
                        .addGap(18, 18, 18)
                        .addComponent(txtSdt))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnThongTinNVLayout.createSequentialGroup()
                        .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnThongTinNVLayout.createSequentialGroup()
                                .addComponent(radioNam)
                                .addGap(21, 21, 21)
                                .addComponent(radioNu))
                            .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(170, 170, 170)
                .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnThongTinNVLayout.createSequentialGroup()
                        .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(296, 296, 296))
                    .addGroup(pnThongTinNVLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnThongTinNVLayout.createSequentialGroup()
                                .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioDangLamViec)
                                    .addComponent(radioQuanLy))
                                .addGap(18, 18, 18)
                                .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioNhanVien)
                                    .addComponent(radioDaNghi)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnThongTinNVLayout.createSequentialGroup()
                        .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(34, 34, 34)
                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnThongTinNVLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnThongTinNVLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(qrCode)))
                .addGap(247, 247, 247))
            .addGroup(pnThongTinNVLayout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnThongTinNVLayout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(155, 155, 155))
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnThongTinNVLayout.setVerticalGroup(
            pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongTinNVLayout.createSequentialGroup()
                .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnThongTinNVLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnThongTinNVLayout.createSequentialGroup()
                                .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel51)
                                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(qrCode))
                                .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnThongTinNVLayout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnThongTinNVLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel52)))
                                .addGap(18, 18, 18)
                                .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radioQuanLy, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel53)
                                    .addComponent(radioNhanVien))
                                .addGap(21, 21, 21)
                                .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel55)
                                    .addComponent(radioDangLamViec)
                                    .addComponent(radioDaNghi)))
                            .addGroup(pnThongTinNVLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnThongTinNVLayout.createSequentialGroup()
                        .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel47)
                            .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel48)
                            .addComponent(radioNam)
                            .addComponent(radioNu))
                        .addGap(24, 24, 24)
                        .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel49)
                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)))))
                .addContainerGap())
        );

        pnDanhSachNV.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh Sách Nhân Viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        tbNhanVien.setAutoCreateRowSorter(true);
        tbNhanVien.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(0, 0, 0)));
        tbNhanVien.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tbNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Họ Và Tên", "Giới Tính", "Ngày Sinh", "Số điện thoại", "Địa Chỉ", "Email", "Tình Trạng"
            }
        ));
        tbNhanVien.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbNhanVien.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbNhanVien.setGridColor(new java.awt.Color(0, 0, 0));
        tbNhanVien.setShowGrid(false);
        tbNhanVien.getTableHeader().setReorderingAllowed(false);
        tbNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbNhanVienMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tbNhanVien);

        jLabel54.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel54.setIcon(new ImageIcon("src/main/img/searchNV.png"));
        jLabel54.setText("Tìm kiếm");

        txtSearch.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(40, 184, 213)));
        txtSearch.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtSearchCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout pnDanhSachNVLayout = new javax.swing.GroupLayout(pnDanhSachNV);
        pnDanhSachNV.setLayout(pnDanhSachNVLayout);
        pnDanhSachNVLayout.setHorizontalGroup(
            pnDanhSachNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDanhSachNVLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnDanhSachNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7)
                    .addGroup(pnDanhSachNVLayout.createSequentialGroup()
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnDanhSachNVLayout.setVerticalGroup(
            pnDanhSachNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDanhSachNVLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnDanhSachNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnQLNVLayout = new javax.swing.GroupLayout(pnQLNV);
        pnQLNV.setLayout(pnQLNVLayout);
        pnQLNVLayout.setHorizontalGroup(
            pnQLNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnQLNVLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnQLNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnDanhSachNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnThongTinNV, javax.swing.GroupLayout.PREFERRED_SIZE, 1264, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnQLNVLayout.setVerticalGroup(
            pnQLNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnQLNVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnThongTinNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnDanhSachNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnQLNV, javax.swing.GroupLayout.DEFAULT_SIZE, 1288, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnQLNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        NhanVien nhanVien = getData();
        JOptionPane.showMessageDialog(this, nhanVienServiceImpl.addOrUpdate(nhanVien) + "\nHệ thống đang tiến hành gửi Email \nVui lòng nhấn OK và đợi trong giây lát...");
        list = nhanVienServiceImpl.getAll();
        showData(list);
        String email = nhanVien.getEmail();
        if (nhanVienServiceImpl.addOrUpdate(nhanVien).equalsIgnoreCase("Thành công")) {
            guiMail(email);
            JOptionPane.showMessageDialog(this, "Đã gửi thông báo và mật khẩu tới email của " + nhanVien.getMa() + "\nNhân viên: " + nhanVien.getHoTen() + "\nEmail: " + nhanVien.getEmail());
        }
    }//GEN-LAST:event_btnThemActionPerformed
    private NhanVien getData() {
        NhanVien nhanVien = new NhanVien();
        nhanVien.setMa("NV0" + (list.size() + 1));
        nhanVien.setHoTen(txtTen.getText());
        if (radioNam.isSelected()) {
            nhanVien.setGioiTinh(true);
        } else {
            nhanVien.setGioiTinh(false);
        }
        if (!txtEmail.getText().isEmpty()) {
            SimpleDateFormat convertToDate = new SimpleDateFormat("dd-MM-yyyy");
            try {
                Date date = convertToDate.parse(txtNgaySinh.getText());
                nhanVien.setNgaySinh(date);
            } catch (Exception e) {
                e.printStackTrace(System.out);
            }
        }
        nhanVien.setDiaChi(txtDiaChi.getText());
        nhanVien.setSdt(txtSdt.getText());
        nhanVien.setEmail(txtEmail.getText());
        nhanVien.setMatKhau(getMd5("123456"));
        if (radioDangLamViec.isSelected()) {
            nhanVien.setTrangThai(0);
        } else {
            nhanVien.setTrangThai(1);
        }
        if (radioQuanLy.isSelected()) {
            nhanVien.setChucVu(0);
        } else {
            nhanVien.setChucVu(1);
        }
        nhanVien.setCreatedDate(new Date());
        nhanVien.setLastModifiedDate(new Date());
        return nhanVien;
    }

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int row = tbNhanVien.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên để tiến hành sửa.");
        } else {
            NhanVien nv = list.get(row);
            NhanVien nhanVien = new NhanVien();
            nhanVien.setId(nv.getId());
            nhanVien.setMa(nv.getMa());
            nhanVien.setHoTen(txtTen.getText());
            if (radioNam.isSelected()) {
                nhanVien.setGioiTinh(true);
            } else {
                nhanVien.setGioiTinh(false);
            }
            SimpleDateFormat convertToDate = new SimpleDateFormat("dd-MM-yyyy");
            try {
                Date date = convertToDate.parse(txtNgaySinh.getText());
                nhanVien.setNgaySinh(date);
            } catch (Exception e) {
                e.printStackTrace(System.out);
            }
            nhanVien.setMatKhau(nv.getMatKhau());
            nhanVien.setDiaChi(txtDiaChi.getText());
            nhanVien.setSdt(txtSdt.getText());
            nhanVien.setEmail(txtEmail.getText());
            if (radioDangLamViec.isSelected()) {
                nhanVien.setTrangThai(0);
            } else {
                nhanVien.setTrangThai(1);
            }
            if (radioQuanLy.isSelected()) {
                nhanVien.setChucVu(0);
            } else {
                nhanVien.setChucVu(1);
            }
            nhanVien.setLastModifiedDate(new Date());
            JOptionPane.showMessageDialog(this, nhanVienServiceImpl.addOrUpdate(nhanVien));
            list = nhanVienServiceImpl.getAll();
            showData(list);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void txtSearchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtSearchCaretUpdate
        String search = txtSearch.getText();
        if (search.isEmpty()) {
            showData(list);
        } else {
            List<NhanVien> listSearch = nhanVienServiceImpl.search(search);
            showData(listSearch);
        }
    }//GEN-LAST:event_txtSearchCaretUpdate

    private void tbNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNhanVienMouseClicked
        // TODO add your handling code here:
        if (txtSearch.getText().isEmpty()) {
            int row = tbNhanVien.getSelectedRow();
            NhanVien nv = list.get(row);
            txtTen.setText(nv.getHoTen());
            if (nv.isGioiTinh()) {
                radioNam.setSelected(true);
            } else {
                radioNu.setSelected(true);
            }
            String date;
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            date = dateFormat.format(nv.getNgaySinh());
            txtNgaySinh.setText(date);
            txtDiaChi.setText(nv.getDiaChi());
            txtSdt.setText(nv.getSdt());
            txtEmail.setText(nv.getEmail());
            if (nv.getChucVu() == 0) {
                radioQuanLy.setSelected(true);
            } else {
                radioNhanVien.setSelected(true);
            }
            if (nv.getTrangThai() == 0) {
                radioDangLamViec.setSelected(true);
            } else {
                radioDaNghi.setSelected(true);
            }
        } else {
            List<NhanVien> listSearch = nhanVienServiceImpl.search(txtSearch.getText());
            int row = tbNhanVien.getSelectedRow();
            NhanVien nv = listSearch.get(row);
            txtTen.setText(nv.getHoTen());
            if (nv.isGioiTinh()) {
                radioNam.setSelected(true);
            } else {
                radioNu.setSelected(true);
            }
            String date;
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            date = dateFormat.format(nv.getNgaySinh());
            txtNgaySinh.setText(date);
            txtDiaChi.setText(nv.getDiaChi());
            txtSdt.setText(nv.getSdt());
            txtEmail.setText(nv.getEmail());
            if (nv.getChucVu() == 0) {
                radioQuanLy.setSelected(true);
            } else {
                radioNhanVien.setSelected(true);
            }
            if (nv.getTrangThai() == 0) {
                radioDangLamViec.setSelected(true);
            } else {
                radioDaNghi.setSelected(true);
            }

        }
    }//GEN-LAST:event_tbNhanVienMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        txtTen.setText("");
        radioNam.setSelected(true);
        txtNgaySinh.setText("");
        txtSdt.setText("");
        txtDiaChi.setText("");
        txtEmail.setText("");
        radioNhanVien.setSelected(true);
        radioDangLamViec.setSelected(true);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        webcam.close();
    }//GEN-LAST:event_btnCloseActionPerformed
    private void showData(List<NhanVien> list) {
        dtm.setRowCount(0);
        for (NhanVien nhanVien : list) {
            dtm.addRow(nhanVien.toDataRow());
        }
    }

    private void guiMail(String email) {
        final String username = "laptopgroup3@gmail.com";
        final String password = "lveekscgavporrkq";

        Properties prop = new Properties();
        prop.put("mail.smtp.host", "smtp.gmail.com");
        prop.put("mail.smtp.port", "587");
        prop.put("mail.smtp.auth", "true");
        prop.put("mail.smtp.starttls.enable", "true"); //TLS

        Session session = Session.getInstance(prop,
                new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });

        try {

            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("from@gmail.com"));
            message.setRecipients(
                    Message.RecipientType.TO,
                    InternetAddress.parse(email)
            );
            message.setSubject("Welcome to Laptop Group 3 Store");
            message.setText("Dear " + email + ", "
                    + "\nCongratulations on being recruited as an employee of Laptop Group 3 Store "
                    + "\nYour default password is: 123456 \nPlease change your password the first time you log in to the system. "
                    + "\nSincerely thank you."
                    + "\nWish you will have a lot of fun when working at our store in the near future.");

            Transport.send(message);

            System.out.println("Done");

        } catch (MessagingException e) {
            e.printStackTrace();
        }
    }

    public String getMd5(String input) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] messageDigest = md.digest(input.getBytes());
            BigInteger no = new BigInteger(1, messageDigest);
            String hashtext = no.toString(16);
            while (hashtext.length() < 32) {
                hashtext = "0" + hashtext;
            }
            return hashtext;
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }

    private void initWebcam() {
        WebcamPanel panel = null;
        Executor executor = Executors.newSingleThreadExecutor(this);
        Dimension size = WebcamResolution.QVGA.getSize();
        webcam = Webcam.getWebcams().get(0); //0 is default webcam
        webcam.setViewSize(size);
        System.out.println("aaaaaa");
        panel = new WebcamPanel(webcam);
        panel.setPreferredSize(size);
        panel.setFPSDisplayed(true);
        panelWebcam.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 235, 150));
        executor.execute(this);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPanel panelWebcam;
    private javax.swing.JPanel pnDanhSachNV;
    private javax.swing.JPanel pnQLNV;
    private javax.swing.JPanel pnThongTinNV;
    private javax.swing.JLabel qrCode;
    private javax.swing.JRadioButton radioDaNghi;
    private javax.swing.JRadioButton radioDangLamViec;
    private javax.swing.JRadioButton radioNam;
    private javax.swing.JRadioButton radioNhanVien;
    private javax.swing.JRadioButton radioNu;
    private javax.swing.JRadioButton radioQuanLy;
    private javax.swing.JTable tbNhanVien;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        do {
            try {
                Thread.sleep(2500);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            Result result = null;
            BufferedImage image = null;

            if (webcam.isOpen()) {
                if ((image = webcam.getImage()) == null) {
                    continue;
                }
            }
            LuminanceSource source = new BufferedImageLuminanceSource(image);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

            try {
                result = new MultiFormatReader().decode(bitmap);
            } catch (NotFoundException e) {
                //No result...
            }

            if (result != null) {
                try {
                    List<String> listt = new ArrayList<>();
                    System.out.println(result);
                    String ttt = result.toString();
                    String[] a = ttt.split("-");
                    String date = a[2].substring(0, 2) + "-" + a[2].substring(2, 4) + "-" + a[2].substring(4);
                    txtTen.setText(a[1]);
                    txtNgaySinh.setText(date);
                    if (a[3].equalsIgnoreCase("Nam")) {
                        radioNam.setSelected(true);
                    } else {
                        radioNu.setSelected(true);
                    }
                    txtDiaChi.setText(a[4]);
                } catch (Exception e) {
                }
            }
        } while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }
}
